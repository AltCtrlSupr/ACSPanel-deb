<IfModule !mod_perl.c>
	please enable mod_perl!
</IfModule>
<IfModule mod_perl.c>
#	Listen 80
#	NameVirtualHost *:80
	<Perl>
		use strict;
		use warnings;
		use DBI;
		use Apache2::PerlSections;

		use Config::Std;
		read_config '/etc/acspanel/apache2-srv/conf.ini' => my %config;

		open(TMPL, $config{host}{'http_tmpl'}) or die "Can't read http template";
		$config{host}{'http_tmpl'} = '';
		while (<TMPL>){
			chomp;
			$config{host}{'http_tmpl'} = $config{host}{'http_tmpl'} . $_ . "\n";
		}
		close(TMPL);
		# apache server hook
		my $srv = Apache2::PerlSections->server();
		# database connection
		my $dbh = DBI->connect(
			'DBI:mysql:'.$config{dbcfg}{'database'}.':'.$config{dbcfg}{'server'}, 
			$config{dbcfg}{'user'}, 
			$config{dbcfg}{'pass'}
		);
		if(not $dbh){
			print "Can't connect to mysql server!\n";
			die $DBI::errstr;
		}
		# fetch ip's
		my $ips = $dbh->prepare(q{
			SELECT DISTINCT(ip)
                                FROM httpd_host 
                                LEFT JOIN domain ON httpd_host.domain_id=domain.id
                                LEFT JOIN service ON httpd_host.service_id=service.id
                                LEFT JOIN server ON service.server_id=server.id
                                LEFT JOIN ip_address ON service.ip_id=ip_address.id
                                INNER JOIN information_schema.processlist
                                WHERE httpd_host.enabled=1 AND domain.enabled=1
                                AND (
                                        processlist.id=connection_id() 
                                        AND (SUBSTRING_INDEX(processlist.host,':',1)=ip_address.ip OR SUBSTRING_INDEX(processlist.host,':',1)=server.hostname)
                                );

		}) or die $dbh->errstr;

		$ips->execute;
		while ( (my $ip) = $ips->fetchrow_array() ){
			my $nvh='NameVirtualHost '.$ip.':80';
			$srv->add_config([split /\n/, $nvh]);
		}

		# fetch hosts
		my $hosts = $dbh->prepare(q{
SELECT httpd_host.domain_id,domain,IF( ISNULL( configuration), '', configuration) configuration, cgi, ssi, php, CONCAT(config_setting.value,fos_user.username),ip,uid,gid
				FROM httpd_host 
				LEFT JOIN domain ON httpd_host.domain_id=domain.id
				LEFT JOIN service ON httpd_host.service_id=service.id
				LEFT JOIN server ON service.server_id=server.id
				LEFT JOIN ip_address ON service.ip_id=ip_address.id
				LEFT JOIN fos_user ON domain.user_id=fos_user.id
				INNER JOIN config_setting
				INNER JOIN information_schema.processlist
				WHERE httpd_host.enabled=1 AND domain.enabled=1
				AND (
					processlist.id=connection_id() 
					AND (SUBSTRING_INDEX(processlist.host,':',1)=ip_address.ip OR SUBSTRING_INDEX(processlist.host,':',1)=server.hostname)
				)
				AND setting_key='home_base';
		}) or die $dbh->errstr;

		# generate vhosts
		$hosts->execute;
		while ( (my $id,my $name,my $cfg,my $bCGI,my $bSSI,my $bPHP, my $homedir, my $ip, my $uid, my $gid) = $hosts->fetchrow_array() ) {
			# generate aditional configuration
			if ($bSSI == 1) {
				my $ssi = ''; 
				$ssi = $ssi . "\t<IfModule mod_include.c>\n";
				$ssi = $ssi . "\t\tAddType text/html .shtml .shtm\n";
				$ssi = $ssi . "\t\tAddOutputFilter INCLUDES .shtml  .shtm\n";
				$ssi = $ssi . "\t</IfModule>\n";
				$cfg = $ssi . $cfg;
			}

			if ($bCGI == 1) {
				my $cgi = ''; 
				$cgi = $cgi . "\tScriptAlias /cgi-bin/ \"%host_dir%/%name%/cgi-bin/\"\n";
				$cgi = $cgi . "\t<Directory \"%host_dir%/%name%/cgi-bin\">\n";
				$cgi = $cgi . "\t\tAllowOverride None\n";
				$cgi = $cgi . "\t\tOptions None\n";
				$cgi = $cgi . "\t\tOrder allow,deny\n";
				$cgi = $cgi . "\t\tAllow from all\n";
				$cgi = $cgi . "\t</Directory>\n";
				$cgi = $cgi . "\t<IfModule mod_cgi.c>\n";
				$cgi = $cgi . "\t\tAddHandler cgi-script .cgi .pl\n";
				$cgi = $cgi . "\t</IfModule>\n";
				$cgi = $cgi . "\t<IfModule mod_cgid.c>\n";
				$cgi = $cgi . "\t\tAddHandler cgi-script .cgi .pl\n";
				$cgi = $cgi . "\t</IfModule>\n";
				$cfg = $cgi . $cfg;
			}

			if ($bPHP == 1) {
				my $php = ''; 
				$php = $php . "\t<IfModule mod_php5.c>\n";
				$php = $php . "\t\tAddHandler application/x-httpd-php .php\n";
				$php = $php . "\t\tAddHandler application/x-httpd-php-source .phps\n";
				$php = $php . "\t</IfModule>\n";
				$cfg = $php . $cfg;
			}else{
				my $php = "php_admin_value engine off\n";
				$cfg = $php . $cfg;
			}

			# get aliases
			my $aliases = '';
			my $alias = $dbh->prepare(q{
				SELECT domain
				FROM domain
				WHERE is_httpd_alias=1 AND enabled=1 AND parent_domain_id=?;
			}) or die $dbh->errstr;
			$alias->execute($id);
			while ( (my $n) = $alias->fetchrow_array() ) {
				$aliases = $aliases . " " . $n;
			}
			if ($aliases ne '') {
				$aliases = "ServerAlias" . $aliases;
			}
			my $locations = '';
			my $prot = $dbh->prepare(q{
				SELECT DISTINCT(protected_dir)
				FROM httpd_user
				WHERE httpd_host_id = ?;
			}) or die $dbh->errstr;
			$prot->execute($id);
			while( (my $n) = $prot->fetchrow_array() ) {
				$locations = $locations . "<Directory \"%host_dir%/%name%/httpdocs/" . $n . "\">\n";
				$locations = $locations . "\t\tAuthType Basic\n";
				$locations = $locations . "\t\tAuthName 'Directorio protegido'\n";
				$locations = $locations . "\t\tAuthMySQL On\n";
				$locations = $locations . "\t\tAuthMySQL_Host mysql\n";
				$locations = $locations . "\t\tAuthMySQL_DB zaphostpanel\n";
				$locations = $locations . "\t\tAuthMySQL_User genar\n";
				$locations = $locations . "\t\tAuthMySQL_Password sBZbK3HpMGzVbYRb\n";
				$locations = $locations . "\t\tAuthMySQL_Password_Table httpd_user\n";
				$locations = $locations . "\t\tAuthMySQL_Password_Field password\n";
				$locations = $locations . "\t\tAuthMySQL_Encrypted_Passwords off\n";
				$locations = $locations . "\t\tAuthMySQL_Username_Field name\n";
				$locations = $locations . "\t\tAuthMySQL_Where ' AND protected_dir=\"$n\" AND httpd_host_id=$id'\n";
				$locations = $locations . "\t\tAuthBasicAuthoritative Off\n";
				$locations = $locations . "\t\tAuthUserFile /dev/null\n";
				$locations = $locations . "\t\tRequire valid-user\n";
				$locations = $locations . "\t</Directory>\n";
			}

			# validate documentroot
			if(!-d "$homedir"){
				mkdir("$homedir", 0755);
				system('chown -R '.$uid.':'.$gid.' "'.$homedir.'"');
			}
			$homedir="$homedir/web";
			if(!-d "$homedir"){
				mkdir("$homedir", 0755);
				system('chown -R '.$uid.':'.$gid.' "'.$homedir.'"');
			}
			if(!-d "$homedir/$name"){
				mkdir("$homedir/$name", 0755);
				mkdir("$homedir/$name/_sys", 0755);
				mkdir("$homedir/$name/_sys/logs", 0755);
				mkdir("$homedir/$name/_sys/tmp", 0755); #for php temp directory
				mkdir("$homedir/$name/_sys/sessions", 0755); #for php sessions directory
				mkdir("$homedir/$name/httpdocs", 0755);
				mkdir("$homedir/$name/cgi-bin", 0755);
				system('chown -R '.$uid.':'.$gid.' "'.$homedir.'/'.$name.'"');
			}

			# create vhost
			my $vhost = $config{host}{'http_tmpl'};
			$vhost =~ s/%id%/$id/g;
			$vhost =~ s/%ip%/$ip/g;
			$vhost =~ s/%protected%/$locations/g;
			$vhost =~ s/%cfg%/$cfg/g;
			$vhost =~ s/%host_dir%/$homedir/g;
			$vhost =~ s/%name%/$name/g;
			$vhost =~ s/%aliases%/$aliases/g;
			$vhost =~ s/%uid%/$uid/g;
			$vhost =~ s/%gid%/$gid/g;
	
			# push vhosts to apache
			$srv->add_config([split /\n/, $vhost]);

			# debugging
			# print "----" . $name . "----\n";
			#print $vhost;
		}
		$dbh->disconnect();
	</Perl>
</IfModule>
